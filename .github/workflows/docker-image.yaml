name: Build and Push Docker Image

on:
  workflow_dispatch:   # 仅手动触发
  # push:
  #   branches:
  #     - '**'  # 任何分支推送都触发

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract branch name
        id: extract_branch
        run: |
          branch="${GITHUB_REF##*/}"
          echo "BRANCH=${branch}" >> $GITHUB_ENV

      - name: Set image tags
        id: meta
        run: |
          DATE=$(date +'%y-%m-%d')
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          TAG1="${{ env.REGISTRY }}/${REPO_LOWER}:${BRANCH}-${DATE}"
          TAG2="${{ env.REGISTRY }}/${REPO_LOWER}:latest"
          echo "TAGS=${TAG1},${TAG2}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.TAGS }}
          cache-from: type=gha,scope=${{ github.ref_name }}
          cache-to: type=gha,mode=max,scope=${{ github.ref_name }}

      - name: Clean up cache
        if: always()
        run: |
          rm -rf /tmp/.buildx-cache